import { Location } from '@angular/common';
import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { guidRegex, integerRegex } from 'src/app/helpers/regex.helper';
import { EntityUpdate } from 'src/app/model/domain-kebab/entities-kebab/dtos/i-entity-kebab-update';
import { EntitiesCrudService } from 'src/app/model/domain-kebab/entities-kebab/entities-kebab-crud.service';

@Component({
  selector: 'app-entity-kebab-update',
  templateUrl: './entity-kebab-update.page.html',
  styleUrls: ['./entity-kebab-update.page.scss']
})
export class EntityUpdatePage implements OnInit {

  entityUpdateForm: FormGroup;

  constructor(
    private entitiesCrudService: EntitiesCrudService,
    private formBuilder: FormBuilder,
    private activatedRoute: ActivatedRoute,
    private router: Router,
    private location: Location) {
  }

  async ngOnInit(): Promise<void> {
    this.entityUpdateForm = this.formBuilder.group({
      id: new FormControl({ value: '', disabled: true }, [Validators.required]),
    });

    this.activatedRoute.params.subscribe((params) => {
      if (params.id) {
        this.loadEntity(params.id).then().catch((error) => {
          console.error(error);
        });
      }
    });
  }

  async onUpdateClicked(): Promise<void> {
    this.entityUpdateForm.markAllAsTouched();
    if (!this.entityUpdateForm.valid) {
      return;
    }

    const entityUpdate = this.entityUpdateForm.getRawValue();
    await this.entitiesCrudService.updateEntity(entityUpdate);
    await this.router.navigate(['/domain-kebab/entities-kebab/detail', entityUpdate.id]);
  }

  async onCancelClicked(): Promise<void> {
    this.location.back();
  }

  private async loadEntity(entityId: string): Promise<void> {
    const entityDetail = await this.entitiesCrudService.getEntityDetail(entityId);
    this.entityUpdateForm.patchValue(EntityUpdate.fromEntityDetail(entityDetail));
  }

}
