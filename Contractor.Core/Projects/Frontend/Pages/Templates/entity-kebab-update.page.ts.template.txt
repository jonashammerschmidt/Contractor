import { Component, Inject, OnInit } from '@angular/core';
import { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';
import { guidRegex, integerRegex } from 'src/app/helpers/regex.helper';
import { EntityUpdate } from 'src/app/model/domain-kebab/entities-kebab/dtos/i-entity-kebab-update';
import { EntitiesCrudService } from 'src/app/model/domain-kebab/entities-kebab/entities-kebab-crud.service';
import { MAT_DIALOG_DATA } from '@angular/material/dialog';

@Component({
  selector: 'app-entity-kebab-update',
  templateUrl: './entity-kebab-update.page.html',
  styleUrls: ['./entity-kebab-update.page.scss']
})
export class EntityUpdatePage implements OnInit {

  entityUpdateForm: FormGroup;

  constructor(
    private entitiesCrudService: EntitiesCrudService,
    private formBuilder: FormBuilder,
    @Inject(MAT_DIALOG_DATA) public entityId: string) {
  }

  async ngOnInit(): Promise<void> {
    const entityDetail = await this.entitiesCrudService.getEntityDetail(this.entityId);

    this.entityUpdateForm = this.formBuilder.group({
      id: new FormControl({ value: '', disabled: true }, [Validators.required]),
    });

    this.entityUpdateForm.patchValue(EntityUpdate.fromEntityDetail(entityDetail));
  }

  async onUpdateClicked(): Promise<void> {
    this.entityUpdateForm.markAllAsTouched();
    if (!this.entityUpdateForm.valid) {
      return;
    }

    const entityUpdate = this.entityUpdateForm.getRawValue();
    await this.entitiesCrudService.updateEntity(entityUpdate);
  }

}
