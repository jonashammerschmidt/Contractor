import { Component, OnInit } from '@angular/core';
import { MatDialog } from '@angular/material/dialog';
import { ActivatedRoute, Router } from '@angular/router';
import { ConfirmationDialogService } from 'src/app/components/ui/confirmation-dialog/confirmation-dialog.service';
import { EntitiesCrudService } from 'src/app/model/domain-kebab/entities-kebab/entities-kebab-crud.service';
import { IEntityDetail } from 'src/app/model/domain-kebab/entities-kebab/dtos/i-entity-kebab-detail';
import { EntityUpdateDialog } from '../../dialogs/entity-kebab-update/entity-kebab-update.dialog';

@Component({
  selector: 'app-entity-kebab-detail',
  templateUrl: './entity-kebab-detail.page.html',
  styleUrls: ['./entity-kebab-detail.page.scss']
})
export class EntityDetailPage implements OnInit {

  entityId: string;
  entity: IEntityDetail;

  constructor(
    private entitiesCrudService: EntitiesCrudService,
    private activatedRoute: ActivatedRoute,
    private router: Router,
    private matDialog: MatDialog,
    private confirmationDialogService: ConfirmationDialogService) {
  }

  async ngOnInit(): Promise<void> {
    this.activatedRoute.params.subscribe((params) => {
      if (params.id) {
        this.entityId = params.id;
        this.loadEntity().then().catch((error) => {
          console.error(error);
        });
      }
    });
  }

  async onUpdateClicked(): Promise<void> {
    const dialog = this.matDialog.open(EntityUpdateDialog, {
        data: this.entityId,
        minWidth: '320px',
    });

    if (await dialog.afterClosed().toPromise()) {
      await this.loadEntity();
    }
  }

  async onDeleteClicked(): Promise<void> {
    if (await this.confirmationDialogService.askForConfirmation('Wollen Sie wirklich EntityReadable \'' + this.entity.name + '\' l√∂schen?')) {
        await this.entitiesCrudService.deleteEntity(this.entity.id);
        await this.router.navigate(['/domain-kebab/entities-kebab']);
    }
  }

  private async loadEntity(): Promise<void> {
    this.entity = null;
    this.entity = await this.entitiesCrudService.getEntityDetail(this.entityId);
  }

}
