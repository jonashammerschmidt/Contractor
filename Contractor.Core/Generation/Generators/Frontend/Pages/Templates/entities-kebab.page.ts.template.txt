import { AfterViewInit, Component, ViewChild } from '@angular/core';
import { MatDialog } from '@angular/material/dialog';
import { MatPaginator } from '@angular/material/paginator';
import { MatSort } from '@angular/material/sort';
import { EntitiesCrudService } from '@core-app/model/domain-kebab/entities-kebab/entities-kebab-crud.service';
import { IEntityDtoExpanded } from '@generated-app/dtos/domain-kebab/entities-kebab/dtos/i-entity-kebab-dto-expanded';
import { TableDataSource } from '@core-app/services/backend/pagination/pagination.data-source';
import { EntityCreateDialog } from './dialogs/create/entity-kebab-create.dialog';

@Component({
  selector: 'app-entities-kebab',
  templateUrl: './entities-kebab.page.html',
  styleUrls: ['./entities-kebab.page.scss']
})
export class EntitiesPage implements AfterViewInit {

  // FilterBar
  filterTerm = '';

  // Table
  @ViewChild(MatPaginator) paginator: MatPaginator;
  @ViewChild(MatSort) sort: MatSort;
  public entitiesDataSource: TableDataSource<IEntityDtoExpanded>;
  public entitiesGridColumns: string[] = [
    'detail',
  ];

  constructor(
    private entitiesCrudService: EntitiesCrudService,
    private matDialog: MatDialog) {

    this.entitiesDataSource = new TableDataSource<IEntityDtoExpanded>({
      getPagedData: (options) => this.entitiesCrudService.getPagedEntities(options),
      paginationOptions: (builder) => builder
        .AddContainsFilters('displayProperty', () => this.filterTerm)
    });
  }

  async ngAfterViewInit(): Promise<void> {
    setTimeout(() => {
      this.entitiesDataSource.initialize(this.paginator, this.sort);
    }, 0);
  }

  openCreateDialog(): void {
    this.matDialog.open(EntityCreateDialog, {
      maxHeight: '90vh',
      panelClass: 'fst-dialog',
    });
  }

}
