import { Component, OnInit } from '@angular/core';
import { UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';
import { MatDialogRef } from '@angular/material/dialog';
import { Router } from '@angular/router';
import { guidRegex, integerRegex } from 'src/app/helpers/regex.helper';
import { EntitiesCrudService } from 'src/app/model/domain-kebab/entities-kebab/entities-kebab-crud.service';

@Component({
  selector: 'app-entity-kebab-create',
  templateUrl: './entity-kebab-create.dialog.html',
  styleUrls: ['./entity-kebab-create.dialog.scss']
})
export class EntityCreateDialog implements OnInit {

  formGroup: UntypedFormGroup;

  constructor(
    private entitiesCrudService: EntitiesCrudService,
    private formBuilder: UntypedFormBuilder,
    private router: Router,
    private dialogRef: MatDialogRef<EntityCreateDialog>) {
  }

  async ngOnInit(): Promise<void> {
    this.formGroup = this.formBuilder.group({
    });
  }

  async onCreateClicked(): Promise<void> {
    this.formGroup.markAllAsTouched();
    if (!this.formGroup.valid) {
      this.scrollToFirstInvalidControl();
      return;
    }

    const entityId = await this.entitiesCrudService.createEntity(this.formGroup.getRawValue());
    this.dialogRef.close();
    await this.router.navigate(['/domain-kebab/entities-kebab/detail', entityId]);
  }

  scrollToFirstInvalidControl(): void {
    const firstElementWithError = document.querySelector('.mat-form-field.ng-invalid');
    if (firstElementWithError) {
      firstElementWithError.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
  }

}
