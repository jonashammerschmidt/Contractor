using DbProjectName.Generated.DbContext.Modules.Domain.Entities;
using System;

namespace GeneratedProjectName.Modules.Domain.Entities
{
    public class EntityDto : EntityDtoData
    {
        public Guid Id { get; set; }

        public Guid RequestScopeId { get; set; }

        public EntityDto() { }

        protected EntityDto(EntityDto entityDto) : base(entityDto)
        {
            this.Id = entityDto.Id;
            this.RequestScopeId = entityDto.RequestScopeId;
        }

        protected EntityDto(EfEntityDto efEntityDto) : base(efEntityDto)
        {
            this.Id = efEntityDto.Id;
            this.RequestScopeId = efEntityDto.RequestScopeId;
        }

        protected EntityDto(Guid id, Guid requestScopeId, EntityDtoData entityDtoData) : base(entityDtoData)
        {
            this.Id = id;
            this.RequestScopeId = requestScopeId;
        }

        public static EntityDto FromEfEntityDto(EfEntityDto efEntityDto)
        {
            if (efEntityDto == null)
            {
                return null;
            }

            return new EntityDto(efEntityDto);
        }

        public static EntityDto FromEntityDtoData(Guid id, Guid requestScopeId, EntityDtoData entityDtoData)
        {
            return new EntityDto(id, requestScopeId, entityDtoData);
        }

        public static EfEntityDto ToEfEntityDto(EntityDto entityDto)
        {
            return new EfEntityDto()
            {
                Id = entityDto.Id,
                RequestScopeId = entityDto.RequestScopeId,
            };
        }

        public override string ToString()
        {
            return $"{this.DisplayProperty} ({this.Id})";
        }
    }
}